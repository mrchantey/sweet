[workspace]
resolver = "2" # Important! wgpu/Bevy needs this!
members = [
	"crates/sweet_bevy",
	"crates/sweet_core",
	"crates/sweet_rsx",
	"crates/sweet_rsx/macros",
	"crates/sweet_leptos",
	"crates/sweet_server",
	"crates/sweet_site",
	"crates/sweet_utils",
	"crates/sweet_test/macros",
	"crates/sweet_test",
	"crates/sweet-cli",
]

[workspace.package]
version = "0.3.0-rc.2"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["Peter Hayman <peteyhayman@gmail.com>"]
readme = "README.md"
description = "Delightful Rust testing"
documentation = "https://mrchantey.github.io/forky/docs"
repository = "https://github.com/mrchantey/sweet"
categories = [
	"compilers",
	"development-tools",
	"development-tools::testing",
	"wasm",
	"web-programming",
]
keywords = ["full-stack", "browser", "web", "test", "e2e"]

[workspace.dependencies]
# dont specify version to allow it to be included as a dev dependency but ignored by cargo publish
sweet = { path = "" }
sweet_bevy = { path = "crates/sweet_bevy", version = "0.3.0-rc.2" }
sweet_core = { path = "crates/sweet_core", version = "0.3.0-rc.2" }
sweet_utils = { path = "crates/sweet_utils", version = "0.3.0-rc.2" }
sweet_leptos = { path = "crates/sweet_leptos", version = "0.3.0-rc.2" }
sweet_rsx = { path = "crates/sweet_rsx", version = "0.3.0-rc.2" }
sweet_rsx_macros = { path = "crates/sweet_rsx/macros", version = "0.3.0-rc.2" }
sweet_server = { path = "crates/sweet_server", version = "0.3.0-rc.2" }
sweet_test = { path = "crates/sweet_test", version = "0.3.0-rc.2" }
sweet_test_macros = { path = "crates/sweet_test/macros", version = "0.3.0-rc.2" }
# forky = { version = "0.2.0-rc.2", path = "../forky/crates/forky" }
# forky = { version = "0.2.1-rc.1", git = "https://github.com/mrchantey/forky" }
# forky = { path = "../forky" }
forky = { version = "0.2.1-rc.1" }


#ðŸ’¡ utility
log = "0.4"
pretty_env_logger = "0.4"
anyhow = "1"
thiserror = "2"
backtrace = "0.3"
extend = "1"
strum = "0.26"
strum_macros = "0.26"
prettyplease = "0.2"

#ðŸ’¡ game
bevy = { version = "0.15", default-features = false }

#ðŸ’¡ io ###
clap = { version = "4.2", features = ["derive"] }
colorize = "0.1"
glob = "0.3"
serde = { version = "1", features = ["derive"] }

#ðŸ’¡ async
futures = "0.3"
futures-util = "0.3"
tokio = { version = "1.42", features = [
	"macros",
	"rt",
	"rt-multi-thread",
	"time",
] }
once_cell = "1.20"
flume = "0.11"
# tokio-stream = "0.1.14"
rayon = "1.7"

#ðŸ’¡ math
# only cos some dep requires it and we need to enable js feature
getrandom = { version = "0.2", features = ["js"] }

#ðŸ’¡ macros
proc-macro2 = "1"
syn = { version = "2", features = ["full"] }
quote = "1"
rstml = "0.11"
typed-builder = "0.18"

#ðŸ’¡wasm
console_log = "1.0"
js-sys = "0.3.63"
wasm-bindgen = "=0.2.99"
wasm-bindgen-futures = "0.4.36"
console_error_panic_hook = "0.1.7"

#https://rustwasm.github.io/wasm-bindgen/api/web_sys/
#https://github.com/rustwasm/wasm-bindgen/blob/main/crates/web-sys/Cargo.toml
[workspace.dependencies.web-sys]
version = "0.3.76"
features = [
	"Text",
	"Node",
	"NodeList",
	# Blob
	'Blob',
	'BlobEvent',
	'BlobEventInit',
	'BlobPropertyBag',
	# HTML
	'Headers',
	'Document',
	'Element',
	'Window',
	'HtmlIFrameElement',
	# Style
	'MediaQueryList',
	# Events
	'MouseEvent',
	'KeyboardEvent',
	# JS
	'console',
	'Navigator',
	'Performance',
	# Fetch
	'Request',
	'RequestInit',
	'RequestMode',
	'Response',
	# Blob
	'Blob',
	'BlobEvent',
	'BlobEventInit',
	'BlobPropertyBag',
	# Url
	'Url',
	'History',
	'Location',
	'UrlSearchParams',
	# Sockets
	'BinaryType',
	'FileReader',
	'ErrorEvent',
	'MessageEvent',
	'ProgressEvent',
	'WebSocket',
]


[package]
name = "sweet"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
readme.workspace = true
description.workspace = true
documentation.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[features]
default = ["core", "macros"]
# default = ["server", "rsx", "macros", "render"]

core = ["dep:sweet_core"]
macros = ["dep:sweet_rsx_macros"]
rsx = ["dep:sweet_rsx"]
server = ["dep:sweet_server"]
bevy = ["sweet_test?/bevy"]
test = ["dep:sweet_test"]

[dependencies]
sweet_utils.workspace = true
sweet_core = { workspace = true, optional = true }
sweet_test = { workspace = true, optional = true }
sweet_rsx = { workspace = true, optional = true }
sweet_rsx_macros = { workspace = true, optional = true }
sweet_server = { workspace = true, optional = true }

# [examples]
# counter = { required_features = ["server"] }
# render_counter = { required_features = ["server"] }

[dev-dependencies]
forky.workspace = true

# basic reactivity
once_cell.workspace = true
flume.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
sweet_server.workspace = true
forky = { workspace = true, features = ["fs"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook.workspace = true
console_log.workspace = true
getrandom.workspace = true
js-sys.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
web-sys.workspace = true
